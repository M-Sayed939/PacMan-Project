Index: src/Project/Maps/Map2/Map2Listener.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package Project.Maps.Map2;\r\n\r\nimport Project.Core.AnimListener;\r\nimport Project.Core.texture.TextureReader;\r\nimport Project.Models.Directions;\r\nimport Project.Models.Ghost;\r\nimport Project.Models.Eating;\r\nimport Project.Models.Pacman;\r\nimport Project.Pages.GameOver;\r\nimport Project.Pages.WinnerPage;\r\n\r\n\r\nimport javax.media.opengl.GL;\r\nimport javax.media.opengl.GLAutoDrawable;\r\nimport javax.media.opengl.GLException;\r\nimport javax.media.opengl.glu.GLU;\r\nimport javax.sound.sampled.Clip;\r\nimport javax.swing.*;\r\nimport java.awt.event.KeyEvent;\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.BitSet;\r\n\r\nimport static Project.Core.Utils.*;\r\nimport static Project.Core.Utils.drawString;\r\nimport static java.awt.event.KeyEvent.*;\r\nimport static java.awt.event.KeyEvent.VK_LEFT;\r\n\r\npublic class Map2Listener extends AnimListener {\r\n    JFrame frame = null;\r\n    Clip EatingSound;\r\n    Pacman pacman = new Pacman();\r\n    int CountFood;\r\n    int Lives =3;\r\n    boolean pause = false;\r\n    ArrayList<Eating> Eating = new ArrayList<>();\r\n    ArrayList<Ghost> ghosts = new ArrayList<>();\r\n    static int No_Of_Ghosts = 4;\r\n    public static final int MAX_X = 620;\r\n    public static final int MAX_Y = 265;\r\n    int AnimIndexForPacman = 1;\r\n    int AnimIndexForFood = 7;\r\n    String[] textureNames = {\r\n            \"mapp2.jpg\", // 0\r\n            \"pacman.png\", // 1\r\n            \"up.gif\", // 2\r\n            \"down.gif\", // 3\r\n            \"right.gif\", // 4\r\n            \"left.gif\", // 5\r\n            \"ghost.gif\", // 6\r\n            \"foodd.png\", // 7\r\n    };\r\n    TextureReader.Texture[] texture = new TextureReader.Texture[textureNames.length];\r\n    int[] textures = new int[textureNames.length];\r\n    int[][] Map = new int[][]{\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},\r\n\r\n    };\r\n    int row = Map.length;\r\n    int column = Map[0].length;\r\n\r\n    public void init(GLAutoDrawable gld) {\r\n        GL gl = gld.getGL();\r\n        /*gl.glClearColor(0, 0, 0, 1f);*/\r\n        {\r\n            gl.glEnable(GL.GL_TEXTURE_2D);\r\n            gl.glBlendFunc(GL.GL_SRC_ALPHA, GL.GL_ONE_MINUS_SRC_ALPHA);\r\n            gl.glGenTextures(textureNames.length, textures, 0);\r\n            for (int i = 0; i < textureNames.length; i++) {\r\n                try {\r\n                    texture[i] = TextureReader.readTexture(assetsFolderName + \"//\" + textureNames[i], true);\r\n                    gl.glBindTexture(GL.GL_TEXTURE_2D, textures[i]);\r\n\r\n                    new GLU().gluBuild2DMipmaps(\r\n                            GL.GL_TEXTURE_2D,\r\n                            GL.GL_RGBA,\r\n                            texture[i].getWidth(), texture[i].getHeight(),\r\n                            GL.GL_RGBA,\r\n                            GL.GL_UNSIGNED_BYTE,\r\n                            texture[i].getPixels() // Image data\r\n                    );\r\n                } catch (IOException e) {\r\n                    System.out.println(e.getMessage());\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }\r\n        gl.glMatrixMode(GL.GL_PROJECTION);\r\n        gl.glLoadIdentity();\r\n\r\n        gl.glOrtho(0, MAX_X, MAX_Y, 0, 0, 1.0);\r\n\r\n        fillEating();\r\n\r\n        addGhostsToArray();\r\n        for (Ghost g : ghosts) {\r\n            g.randMove();\r\n        }\r\n    }\r\n\r\n    private void addGhostsToArray() {\r\n        for (int i = 0; i < No_Of_Ghosts; i++) {\r\n            ghosts.add(new Ghost());\r\n        }\r\n    }\r\n\r\n    private void fillEating() {\r\n        for (int i = 0; i < row; i++) {\r\n            for (int j = 0; j < column; j++) {\r\n                if (i % 2 == 0 && j % 3 == 0)\r\n                if (Map[i][j] == 1) { // eat\r\n                    Eating.add(new Eating(j, i));\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void display(GLAutoDrawable gld) {\r\n        GL gl = gld.getGL();\r\n        gl.glClear(GL.GL_COLOR_BUFFER_BIT);\r\n\r\n        gl.glPushMatrix();\r\n        int move = 5;\r\n        gl.glTranslated(8, move, 0);\r\n        gl.glScaled(1, 0.44, 1);\r\n        {\r\n            drawBackground(gl);\r\n        }\r\n        gl.glPopMatrix();\r\n\r\n        gl.glPushMatrix();\r\n        gl.glTranslated(8, move, 0);\r\n        gl.glScaled(0.95, 0.93, 1);\r\n        {\r\n            drawEating(gl);\r\n            drawPacman(gl);\r\n            drawGhost(gl);\r\n        }\r\n        gl.glPopMatrix();\r\n\r\n        handelPacmanMove();\r\n        handelPacmanEating();\r\n\r\n        handelGhostMove();\r\n\r\n        handelLose();\r\n        try {\r\n//            drawString(gl,90,MAX_Y-8,\"Time: \"+time);\r\n            drawString(gl, 5, MAX_Y - 8, \"Score: \" + CountFood);  // Score\r\n            drawString(gl, 60, MAX_Y - 8, \"Lives: \" + Lives); // Lives\r\n        } catch (GLException e) {\r\n            System.out.println(e.getMessage());\r\n        }\r\n\r\n        handelWinning();\r\n\r\n    }\r\n\r\n\r\n    private void handelLose() {\r\n        for (Ghost g : ghosts) {\r\n            if (g.ii == pacman.ii && g.jj == pacman.jj) {\r\n                if (EatingSound != null) EatingSound.stop();\r\n                if (--Lives == 0) {\r\n                    frame.dispose();\r\n                    new GameOver().setVisible(true);\r\n                } else {\r\n                    pacman.reset();\r\n                }\r\n            }\r\n            }\r\n\r\n        }\r\n\r\n\r\n    private void handelGhostMove() {\r\n        for (Ghost g : ghosts) {\r\n            switch (g.direction) {\r\n                case IDEAL -> {\r\n                }\r\n                case UP -> {\r\n                    if (g.y - g.step < 0 || g.jj - 1 < 0 || Map[g.jj - 1][g.ii] == 0) {\r\n                        g.randMove();\r\n                        return;\r\n                    }\r\n                    g.moveUP();\r\n                }\r\n                case DOWN -> {\r\n                    if (g.y + g.step > MAX_Y || g.jj + 1 >= row || Map[g.jj + 1][g.ii] == 0) {\r\n                        g.randMove();\r\n                        return;\r\n                    }\r\n                    g.moveDown();\r\n                }\r\n                case RIGHT -> {\r\n                    if (g.x + g.step > MAX_X || g.ii + 1 >= column || Map[g.jj][g.ii + 1] == 0) {\r\n                        g.randMove();\r\n                        return;\r\n                    }\r\n                    g.moveRight();\r\n                }\r\n                case LEFT -> {\r\n                    if (g.x - g.step < 0 || g.ii - 1 < 0 || Map[g.jj][g.ii - 1] == 0) {\r\n                        g.randMove();\r\n                        return;\r\n                    }\r\n                    g.moveLeft();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private void drawGhost(GL gl) {\r\n        for (Ghost g : ghosts) {\r\n            DrawSprite(gl, (int) g.x, (int) g.y, 6, textures, 15);\r\n        }\r\n    }\r\n\r\n    private void handelWinning() {\r\n        if (Eating.isEmpty()) {\r\n            System.out.println(\"You Win\");\r\n            if (EatingSound != null) EatingSound.stop();\r\n\r\n            frame.dispose();\r\n            new WinnerPage().setVisible(true);\r\n        }\r\n    }\r\n\r\n\r\n    private void handelPacmanEating() {\r\n\r\n        for (int i = 0; i < Eating.size(); i++) {\r\n            if (pacman.ii == Eating.get(i).ii && pacman.jj == Eating.get(i).jj) {\r\n                CountFood++;\r\n                System.out.println(Eating.size());\r\n                if (EatingSound == null || !EatingSound.isRunning()) {\r\n                    EatingSound = playMusic(\"src/Project/Assets/pacman-wakawaka.wav\", false);\r\n                }\r\n                Eating.remove(i--);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void handelPacmanMove() {\r\n        if (isKeyPressed(VK_UP)) {\r\n            pacman.direction = Directions.UP;\r\n        }\r\n        if (isKeyPressed(VK_DOWN)) {\r\n            pacman.direction = Directions.DOWN;\r\n        }\r\n        if (isKeyPressed(VK_RIGHT)) {\r\n            pacman.direction = Directions.RIGHT;\r\n        }\r\n        if (isKeyPressed(VK_LEFT)) {\r\n            pacman.direction = Directions.LEFT;\r\n        }\r\n        if (!(isKeyPressed(VK_UP) || isKeyPressed(VK_DOWN) || isKeyPressed(VK_RIGHT) || isKeyPressed(VK_LEFT))) {\r\n            pacman.direction = Directions.IDEAL;\r\n        }\r\n\r\n        switch (pacman.direction) {\r\n            case IDEAL -> {\r\n            }\r\n            case UP -> {\r\n                if (pacman.y - pacman.step < 0 || pacman.jj - 1 < 0 || Map[pacman.jj - 1][pacman.ii] == 0) return;\r\n                pacman.moveUP();\r\n            }\r\n            case DOWN -> {\r\n                if (pacman.y + pacman.step > MAX_Y || pacman.jj + 1 >= row || Map[pacman.jj + 1][pacman.ii] == 0)\r\n                    return;\r\n                pacman.moveDown();\r\n            }\r\n            case RIGHT -> {\r\n                if (pacman.x + pacman.step > MAX_X || pacman.ii + 1 >= column || Map[pacman.jj][pacman.ii + 1] == 0)\r\n                    return;\r\n                pacman.moveRight();\r\n            }\r\n            case LEFT -> {\r\n                if (pacman.x - pacman.step < 0 || pacman.ii - 1 < 0 || Map[pacman.jj][pacman.ii - 1] == 0) return;\r\n                pacman.moveLeft();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void drawEating(GL gl) {\r\n        for (Eating e : Eating) {\r\n            DrawSprite(gl, (int) e.x, (int) e.y, AnimIndexForFood, textures, 12);\r\n        }\r\n    }\r\n\r\n    private void drawPacman(GL gl) {\r\n        changeAnimIndex();\r\n\r\n        DrawSprite(gl, (int) pacman.x, (int) pacman.y, AnimIndexForPacman, textures, 15);\r\n    }\r\n\r\n    private void changeAnimIndex() {\r\n        switch (pacman.direction) {\r\n            case IDEAL -> {\r\n                AnimIndexForPacman = 1;\r\n            }\r\n            case UP -> { // 2\r\n                if (AnimIndexForPacman == 1) AnimIndexForPacman = 2;\r\n                else if (AnimIndexForPacman == 2) AnimIndexForPacman = 1;\r\n            }\r\n            case DOWN -> { // 3\r\n\r\n                if (AnimIndexForPacman == 1) AnimIndexForPacman = 3;\r\n                else if (AnimIndexForPacman == 3) AnimIndexForPacman = 1;\r\n            }\r\n            case RIGHT -> { // 4\r\n\r\n                if (AnimIndexForPacman == 1) AnimIndexForPacman = 4;\r\n                else if (AnimIndexForPacman == 4) AnimIndexForPacman = 1;\r\n            }\r\n            case LEFT -> { // 5\r\n\r\n                if (AnimIndexForPacman == 1) AnimIndexForPacman = 5;\r\n                else if (AnimIndexForPacman == 5) AnimIndexForPacman = 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    private void drawBackground(GL gl) {\r\n        DrawSprite(gl, 0, 0, 0, textures, MAX_X - 10);\r\n    }\r\n\r\n\r\n    public BitSet keyBits = new BitSet(256);\r\n\r\n    @Override\r\n    public void keyPressed(final KeyEvent event) {\r\n        int keyCode = event.getKeyCode();\r\n        keyBits.set(keyCode);\r\n        if (event.getKeyCode() == KeyEvent.VK_P) {\r\n            pause=!pause;\r\n            if (pause == false)\r\n                Map2.animator.start();\r\n            else if (pause == true) {\r\n                    Map2.animator.stop();\r\n                JOptionPane.showMessageDialog(null,\"Enter P To Continue\",\"Attention\",2);\r\n\r\n            }\r\n\r\n                }\r\n            \r\n        }\r\n\r\n\r\n    @Override\r\n    public void keyReleased(final KeyEvent event) {\r\n        int keyCode = event.getKeyCode();\r\n        keyBits.clear(keyCode);\r\n        switch (keyCode) {\r\n            case VK_UP, VK_DOWN, VK_RIGHT, VK_LEFT -> pacman.direction = Directions.IDEAL;\r\n        }\r\n    }\r\n\r\n    public boolean isKeyPressed(final int keyCode) {\r\n        return keyBits.get(keyCode);\r\n    }\r\n\r\n    @Override\r\n    public void keyTyped(KeyEvent e) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void reshape(GLAutoDrawable glAutoDrawable, int i, int i1, int i2, int i3) {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void displayChanged(GLAutoDrawable glAutoDrawable, boolean b, boolean b1) {\r\n\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/Project/Maps/Map2/Map2Listener.java b/src/Project/Maps/Map2/Map2Listener.java
--- a/src/Project/Maps/Map2/Map2Listener.java	(revision f757100ae197aa70704c45ed7ba190ec1c377b8f)
+++ b/src/Project/Maps/Map2/Map2Listener.java	(date 1672016251162)
@@ -363,16 +363,16 @@
         int keyCode = event.getKeyCode();
         keyBits.set(keyCode);
         if (event.getKeyCode() == KeyEvent.VK_P) {
-            pause=!pause;
-            if (pause == false)
+            pause = !pause;
+            if (!pause)
                 Map2.animator.start();
-            else if (pause == true) {
-                    Map2.animator.stop();
-                JOptionPane.showMessageDialog(null,"Enter P To Continue","Attention",2);
+            else if (pause) {
+                Map2.animator.stop();
+                JOptionPane.showMessageDialog(null, "Press P To Continue", "Attention", JOptionPane.WARNING_MESSAGE);
 
             }
 
-                }
+        }
             
         }
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1901c679-ef5b-4b01-869c-8de279211f87\" name=\"Changes\" comment=\"Add Score And Lives\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Project/Maps/Map2/Map2Listener.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Project/Maps/Map2/Map2Listener.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"Moody\" />\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2JCRDqFkG23HmnxkPLxir2jqw3w\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;C:/JOGLwin/lib64/jogl_cg.dll&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Libraries&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;Errors&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\pc\\IdeaProjects\\PacMan-Project\\src\\Project\\Assets\\imgs\" />\r\n      <recent name=\"C:\\Users\\pc\\IdeaProjects\\PacMan-Project\\src\\Project\\Assets\" />\r\n      <recent name=\"C:\\Users\\hp\\IdeaProjects\\ms\\PacMan-Project\\src\\Project\" />\r\n      <recent name=\"C:\\Users\\hp\\IdeaProjects\\ms\\PacMan-Project\\src\\Project\\texture\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\pc\\IdeaProjects\\PacMan-Project\\src\\Project\\Assets\\imgs\" />\r\n      <recent name=\"C:\\Users\\hp\\IdeaProjects\\ms\\PacMan-Project\\src\\Project\\Assets\" />\r\n      <recent name=\"C:\\Users\\pc\\IdeaProjects\\PacMan-Project\\src\\Project\" />\r\n    </key>\r\n    <key name=\"CopyClassDialog.RECENTS_KEY\">\r\n      <recent name=\"Project.Pages\" />\r\n      <recent name=\"Project.Map5\" />\r\n      <recent name=\"Project.Map4\" />\r\n      <recent name=\"\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Map2\">\r\n    <configuration name=\"Map1\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project.Maps.Map1.Map1\" />\r\n      <module name=\"PacMan-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.Maps.Map1.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Map2\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project.Maps.Map2.Map2\" />\r\n      <module name=\"PacMan-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.Maps.Map2.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Map5\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project.Maps.Map5.Map5\" />\r\n      <module name=\"PacMan-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.Maps.Map5.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Project.Pages.HomePage\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project.Pages.HomePage\" />\r\n      <module name=\"PacMan-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.Pages.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"User_Name\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Project.Pages.User_Name\" />\r\n      <module name=\"PacMan-Project\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"Project.Pages.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Map2\" />\r\n        <item itemvalue=\"Application.Map1\" />\r\n        <item itemvalue=\"Application.User_Name\" />\r\n        <item itemvalue=\"Application.Project.Pages.HomePage\" />\r\n        <item itemvalue=\"Application.Map5\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1901c679-ef5b-4b01-869c-8de279211f87\" name=\"Changes\" comment=\"\" />\r\n      <created>1671579963392</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1671579963392</updated>\r\n      <workItem from=\"1671629520497\" duration=\"1008000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"first Pages\">\r\n      <created>1671580409361</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671580409361</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"org. package\">\r\n      <created>1671589508336</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1671589508336</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Add Score And Lives\">\r\n      <created>1672014467857</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672014467857</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Add Score And Lives\">\r\n      <created>1672014879153</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1672014879153</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"5\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"false\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"first Pages\" />\r\n    <MESSAGE value=\"org. package\" />\r\n    <MESSAGE value=\"Add Score And Lives\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Add Score And Lives\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f757100ae197aa70704c45ed7ba190ec1c377b8f)
+++ b/.idea/workspace.xml	(date 1672017079093)
@@ -4,7 +4,7 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1901c679-ef5b-4b01-869c-8de279211f87" name="Changes" comment="Add Score And Lives">
+    <list default="true" id="1901c679-ef5b-4b01-869c-8de279211f87" name="Changes" comment="Add Pause">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/Project/Maps/Map2/Map2Listener.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Project/Maps/Map2/Map2Listener.java" afterDir="false" />
     </list>
@@ -183,7 +183,14 @@
       <option name="project" value="LOCAL" />
       <updated>1672014879153</updated>
     </task>
-    <option name="localTasksCounter" value="5" />
+    <task id="LOCAL-00005" summary="Add Score And Lives">
+      <created>1672015643482</created>
+      <option name="number" value="00005" />
+      <option name="presentableId" value="LOCAL-00005" />
+      <option name="project" value="LOCAL" />
+      <updated>1672015643482</updated>
+    </task>
+    <option name="localTasksCounter" value="6" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
